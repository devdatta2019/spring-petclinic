
name: Build code, run unit test, run SAST, SCA, DAST security scans
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    name: Run unit tests and SAST scan on the source code 
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven cloud
      run:  mvn -B verify sonar:sonar -Dsonar.projectKey=security2022 -Dsonar.organization=security2022 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  security:
    runs-on: ubuntu-latest
    needs: build
    name: Run the SCA scan on the source code
    steps:
      - uses: actions/checkout@master
      - name: RunSnyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build-and-scan:
    name: Build and scan image
    runs-on: ubuntu-latest
    env:   
            IMAGE_NAME: ${{ github.repository }}:${{ github.sha }} 

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Build the image
        run: docker build -t $IMAGE_NAME .

      - name: Prisma Cloud image scan
        id: scan
        uses: PaloAltoNetworks/prisma-cloud-scan@v1
        continue-on-error: false
        with:
          pcc_console_url: ${{ secrets.PCC_CONSOLE_URL }}
          pcc_user: ${{ secrets.PCC_USER }}
          pcc_pass: ${{ secrets.PCC_PASS }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}      

     

  GKE:  
    name: Build and Deploy to GKE
    runs-on: ubuntu-latest
    env:
        PROJECT_ID: ${{ secrets.GKE_PROJECT }}
        GKE_CLUSTER: hello-cluster    # Add your cluster name here.
        GKE_ZONE: us-central1-c   # Add your cluster zone here.
        IMAGE_NAME: test

    steps: 
       - name: checkout
         uses: actions/checkout@v3
       - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
         with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
       - run: |-
           gcloud --quiet auth configure-docker
        
       - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e 
         with:
           cluster_name: ${{ env.GKE_CLUSTER }}
           location: ${{ env.GKE_ZONE }}
           credentials: ${{ secrets.GKE_SA_KEY }}
                     
       - name: build 
         run: |- 
             docker build --tag gcr.io/$PROJECT_ID/$IMAGE_NAME:latest . 
                   
       
       - name: publish
         
         run: |-
            docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
       
       
       - name:  Set up Kustomize
         run: |-
           curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
           chmod u+x ./kustomize
         
       - name: Deploy
         run: |-
          ./kustomize edit set image gcr.io/apt-reality-357605/test@sha256:32cdcaa082fcd2319c1c406c7e2dcc97d8692b542871acedef57141cb526fe56
          ./kustomize build . | kubectl apply -f deployment.yml
            kubectl get services -o wide
          ./kustomize build . | kubectl apply -f deployment.yml
            kubectl get services -o wide
